<!doctype html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>CURATE THE VIBES</title>
  <script type=module>
    customElements.define('toast-dialog', class ToastDialog extends HTMLElement {
      constructor() { super() }
      connectedCallback() {
        const dialog = this.querySelector('dialog');
        dialog.addEventListener('close', () => history.replaceState(null, null, location.pathname))
        setTimeout(() => dialog.close(), 2500);
      }
    })
    customElements.define('local-time', class LocalTime extends HTMLElement {
      static formatter = new Intl.DateTimeFormat(
                                   undefined,
                                   {
                                     day: "numeric",
                                     month: "short",
                                     year: "numeric"
                                   }
                                 )
                                 
      constructor() { super() }
      connectedCallback() {
        const time = this.querySelector('time');
        const timestamp = time.dateTime;
        time.innerText = LocalTime.formatter.format(Date.parse(timestamp))
      }
    })
    customElements.define('youtube-search', class YouTubeSearch extends HTMLElement {
      constructor() { super() }
      connectedCallback() {
        this.resultTemplate = this.querySelector('output template').content;
        this.resultsTable = this.querySelector('output table tbody');
        this.querySelector('#search_form').addEventListener('submit', async e => {
          e.preventDefault();
          const params = new FormData(e.target);
          const url = `${params.get('endpoint')}&q=${params.get('q')}&key=${params.get('key')}`;
          const query = await fetch(url).then(results => results.json());
          const results = query.items
            .map(i => {
              const template = this.resultTemplate.cloneNode(true);
              template.querySelector('[name=yt_id]').value = i.id.videoId;

              template.querySelector('[data-name=preview]').href = `https://www.youtube.com/watch?v=${i.id.videoId}`;
              template.querySelector('[data-name=title]').innerHTML = i.snippet.title;
              template.querySelector('[name=title]').value = i.snippet.title;

              template.querySelector('[data-name=artist]').innerHTML = i.snippet.channelTitle.replace(' - Topic', '');
              template.querySelector('[name=artist]').value = i.snippet.channelTitle.replace(' - Topic', '');

              return template;
            })
          this.resultsTable.innerHTML = '';
          results.forEach(el => this.resultsTable.appendChild(el));
        })
      }
    })
  </script>
  <style>
    @font-face {
        font-family: "Sixtyfour";
        src: url(assets/Sixtyfour-Variable.ttf);
    }
    :root {
      font: 1rem/1 system-ui;
      color-scheme: dark;
      --accent-color:  oklch(65% 0.1 285);
      accent-color: var(--accent-color);
    }
    *, *::before, *::after {
        box-sizing: border-box;
        -webkit-tap-highlight-color: transparent;
    }
    html {
        font: 1rem/1 Inter, Roboto, 'Helvetica Neue', 'Arial Nova', 'Nimbus Sans', Arial, sans-serif;
        font-family: sans-serif;
        color: oklch(95% 0.15 285);
        fill: oklch(95% 0.15 285);
    }
    body {
        margin: 0 1rem 0 1rem;
        background-image: url(assets/pagebg.png);
        background-size: 400px;
        min-height: 100svh;
        display: flex;
        flex-direction: column;
    }
    button, input {
      color: oklch(95% 0.15 285);
    }
    button, input[type=submit] {
      font-weight: 600
    }
    h1 {
        text-wrap: balance;
        color: oklch(75% 0.15 170);
        font-size: 3rem;
        text-align: center;
        font-family: "Sixtyfour";
        text-shadow: oklch(75% 0.15 170) 0 0  0.35em;
        font-variation-settings: "BLED" 22, "SCAN" -30;
    }
    main {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        padding: 1.5rem;
        margin-block-end: 4rem;
        width: fit-content;
        margin-inline: auto;
        border-radius: 1.5rem;
        border: 1px solid oklch(35% 0.1 285);
        -webkit-backdrop-filter: blur(5px);
        backdrop-filter: blur(5px);
        background-image: url(assets/playerbg.png);
        background-position: center;
        background-color: oklch(35% 0.1 285 / 35%);
    }
    fieldset {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        border-radius: .5rem;
        padding: .75rem 1rem 1rem 1rem;
        border: 1px solid oklch(45% 0.1 285);
    }
    #credentials {
        margin-inline: auto;
    }
    legend {
      font-weight: bold;
      font-size: 1.2rem;
      padding-inline: .5rem;
    }
    form {
      display: grid;
      grid-template-columns: max-content 1fr;
      margin-inline: auto;
      width: fit-content;
      gap: .5rem;
      align-items: center;
      & label {
        justify-self: end;
        font-weight: 600;
      }
      & input[type=submit] {
        grid-column: span 2;
        cursor: pointer;
      }
    }
    input, button {
      padding: .35rem;
      border-radius: .5em;
      border: 1px solid oklch(45% 0.1 285);
    }
    button {
      cursor: pointer;
    }
    table {
      border-collapse: collapse;
    }
    td, th {
      padding: .5rem;
      max-width: min(40ch, 20vw);
      overflow: hidden;
      text-overflow: ellipsis;
    }
    td > button {
      width: 6rem;
    }
    tbody td:last-child:has(button) {
      padding: .25rem;
    }
    thead td[colspan] {
      padding-inline: 0;
      & button {
        padding-block: .5rem;
      }
    }
    th {
      background-color: oklch(45% 0.1 285 / 25%);
    }
    tbody tr:nth-child(even) td {
      background-color: oklch(45% 0.1 285 / 25%);
    }
    th:first-child,
    tbody td:first-child {
      padding-inline-start: 1rem;
      border-radius: .35rem 0 0 .35rem;
    }
    th:last-child,
    tbody td:last-child {
      padding-inline-end: 1rem;
      border-radius: 0 .35rem .35rem 0;
    }
    thead button {
      width: 100%;
      display: block;
      padding: .35rem;
    }
    td {
      white-space: nowrap;
      &:first-child {
        padding-block: .15rem;
      }
      & .thumbnail {
        margin-inline-end: .5rem;
        vertical-align: middle;
        display: inline-block;
        background-position: center;
        background-size: 5.35rem;
        background-repeat: no-repeat;
        width: 2rem;
        height: 2rem;
        border-radius: .25rem;
        outline: 1px solid oklch(35% 0.1 285);
        position: relative;
        overflow: hidden;
        & img.smol {
          width: 3.6rem;
          position: absolute;
          inset-block-start: -.35rem;
          inset-inline-start: -.8rem;
        }
        img.beeg {
          display: none;
        }
        &:hover img.beeg {
          display: block;
        }
      }
    }
    & a[href*=youtube] {
      width: 100%;
      height: 100%;
      display: block;
      text-align: center;
      color: canvastext;
      text-decoration: none;
      background-color: buttonface;
      padding: .35rem;
      border-radius: .5em;
      border: 1px solid oklch(45% 0.1 285);
      &:is(:hover, :focus-visible) {
        background-color: color-mix(in oklch longer hue, canvastext 20%, buttonface);
      }
    }
    dialog {
      translate: 0 -10vh;
      max-height: min(75svh, 50rem);
      padding: 1rem;
      border-radius: .5rem;
      border: 1px solid oklch(35% 0.1 285);
      -webkit-backdrop-filter: blur(5px);
      backdrop-filter: blur(5px);
      background-image: url(assets/playerbg.png);
      background-position: center;
      background-color: oklch(25% 0.05 285 / 75%);
      border-radius: 1rem;
    }
    youtube-search {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      & #search_form {
        width: 100%;
        min-width: 60ch;
        grid-template-columns: 1fr max-content;
        & button {
          width: 8rem;
        }
      }
      & output {
        & table {
          width: 100%;
          & td {
            white-space: nowrap;
            padding-block: .25rem;
            max-width: min(60ch, 50vw);
            overflow: clip;
            text-overflow: ellipsis;
            &:last-child {
              width: 9.5rem;
            }
          }
        }
        &:has(tbody:empty) {
          display: none;
        }
      }
    }
    table td > form > input[type=submit] {
      width: 6rem;
    }
    td:has(> img, > a, > button, > form) {
      padding: .25rem;
    }
    form[method=dialog] {
      width: 100%;
      margin-block-end: .5rem;
      display: flex;
      justify-content: space-between;
      & button {
        height: 1.5rem;
        width: 1.5rem;
        padding: 0;
        cursor: pointer;
      }
    }
    toast-dialog dialog[open] {
      position: fixed;
      top: 2rem;
      margin-inline: auto;
      translate: 0;
      display: flex;
      flex-direction: row-reverse;
      align-items: center;
      gap: .25rem;
      padding: .5rem .75rem;
      & form[method=dialog] {
        width: fit-content;
        margin: 0;
        & input {
          padding: 0;
          border: 0;
          background: transparent;
          height: 2rem;
          width: 2rem;
          &:is(:hover, :focus-visible) {
            color: var(--accent-color);
          }
        }
      }
      & p {
        margin: 0;
        padding: 0;
        font-size: 1rem;
        max-width: 30rem;
        line-height: 1.5;
      }
    }
  </style>
</head>

<body>
  <h1>CURATE THE VIBES</h1>
  <main>
    <fieldset id="credentials">
      <legend>CREDENTIALS</legend>
      <form method=post action=user/edit>
        <label for=username>omg.lol Username</label>
        <input id=username type=text name=username value="<%= @user.username %>">
        <label for=api_key>YouTube API Key</label>
        <input type=password id=api_key name=api_key value="<%= @user.api_key %>">
        <input type=submit value="Save">
      </form>
    </fieldset>
    <fieldset>
      <legend>TRACKLIST</legend>
      <table>
        <thead>
          <tr><td colspan=6><button onclick="addTrack.showModal()">Add Track</button></td></tr>
          <tr>
            <th>Title</th>
            <th>Artist</th>
            <th>Added</th>
            <th>Listen</th>
            <th></th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <% @tracks.each do |t| %>
            <tr>
              <td>
                <span class="thumbnail">
                  <img class=smol loading=lazy src="https://i.ytimg.com/vi/<%= t[:yt_id] %>/hqdefault.jpg" />
                </span>
                <%= t[:title] %>
              </td>
              <td><%= t[:artist] %></td>
              <td>
                <local-time>
                  <time datetime="<%= t[:created_at] %>"><%= t[:created_at] %></time>
                </local-time>
              </td>
              <td><a target="_blank" href="https://www.youtube.com/watch?v=<%= t[:yt_id] %>">⏵</a></td>
              <td>
                <button onclick="EditTrack<%= t[:id] %>.showModal()">Edit</button>
                <dialog id="EditTrack<%= t[:id] %>">
                  <form method=dialog>
                    <strong>Edit Track Data</strong>
                    <button>🗙</button>
                  </form>
                  <form method=post action=track/edit>
                    <input type=hidden name=id value="<%= t[:id] %>">
                    <label for="Edit<%= t[:id] %>Title">Title</label>
                    <input value="<%= t[:title] %>" name=title type=text>
                    <label for="Edit<%= t[:id] %>Artist">Artist</label>
                    <input value="<%= t[:artist] %>" name=artist type=text>
                    <input type=submit value="Save">
                  </form>
                </dialog>
              </td>
              <td>
                <form method=post action=track/delete>
                  <input type=hidden name=id value="<%= t[:id] %>">
                  <input type=submit value=Delete>
                </form>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
      <dialog id=addTrack>
        <form method=dialog>
          <strong>Add Track</strong>
          <button>🗙</button>
        </form>
        <youtube-search>
          <form id="search_form">
            <input type=hidden name=endpoint value="https://youtube.googleapis.com/youtube/v3/search?part=snippet&type=video&videoCategoryId=10&maxResults=25&order=relevance">
            <input type=hidden name=key value="<%= @user.api_key %>">
            <input placeholder="Search YouTube" autofocus type=search name=q>
            <button>Search</button>
          </form>
          <output form="search_form">
            <template>
              <tr>
                <td data-name=title></td>
                <td data-name=artist></td>
                <td><a data-name="preview" target="_blank">⏵</a></td>
                <td>
                  <form method=post action=track/new>
                    <input type=hidden name=yt_id>
                    <input type=hidden name=title>
                    <input type=hidden name=artist>
                    <input type=submit value="Add">
                  </form>
                </td>
              </tr>
            </template>
            <table>
              <thead>
                <th>Title</th>
                <th>Artist</th>
                <th>Preview</th>
                <th></th>
              </thead>
              <tbody></tbody>
            </table>
          </output>
        </youtube-search>
      </dialog>
    </section>
  </main>
  <% if @message %>
    <toast-dialog>
      <dialog open>
        <form method=dialog>
          <input type=submit value=🗙 />
        </form>
      <p><%= @message %></p>
      </dialog>
    </toast-dialog>
  <% end %>
</body>
</html>
